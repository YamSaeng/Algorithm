#include<stdio.h>
#include<string.h>

//------------------------------------------------------------------------------------------------------------------------------------------------------
//어떤 자연수 p와 q가 있을 때, 만일 p를 q로 나누었을 때 나머지가 0이면 q는 p의 약수이다.
//6을 예로 들면
//6 / 1 = 6 ... 0
//6 / 2 = 3 ... 0
//6 / 3 = 2 ... 0
//6 / 4 = 1 ... 2
//6 / 5 = 1 ... 1
//6 / 6 = 1 ... 0
//그래서 6의 약수는 1, 2, 3, 6, 총 네개이다.
//두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.
//입력
//첫째 줄에 N과 K가 빈칸을 사이에 두고 주어진다. N은 10000 이하이다.
//K는 1 이상 N 이하이다.
//출력
//첫째 줄에 N의 약수들 중 K번째로 작은 수를 출력한다.
//만일 N의 약수의 개수가 K개보다 적어서 K번째 약수가 존재하지 않을 경우에는 0을 출력하시오.
//------------------------------------------------------------------------------------------------------------------------------------------------------
void Question2501()
{
	int Array[100];
	int Index = 0;
	
	memset(Array, 0, sizeof(Array));
	int Number;

	scanf_s("%d", &Number);

	for (int i = 1; i <= Number; i++)
	{
		//입력받은 Number를 i(1) 부터 나눳을때 0으로 떨어지면 약수로 판단해준다.
		if (Number % i == 0)
		{
			Array[Index] = i;
			Index++;
		}
	}	

	if (Index != 0)
	{
		printf("%d", Array[2]);
	}
	else
	{
		printf("0");
	}
}

//------------------------------------------------------------------------------------------------------------------------------------------------------
//양의 정수 n이 주어졌을 때, 이를 이진수로 나타냈을 때 1의 위치를 모두 찾는 프로그램을 작성하시오.
//최하위 비트의 위치는 0이다.
//입력
//첫째 줄에 테스트 케이스의 개수 T가 주어진다.
//각 테스트 케이스는 한 줄로 이루어져 있고, n이 주어진다. (1 <= T <= 10 , 1 <= n <= 10^6)
//출력
//각 테스트 케이스에 대해서, 1의 위치를 공백으로 구분해서 줄 하나에 출력한다.
//위치가 낮은 것부터 출력한다.
//------------------------------------------------------------------------------------------------------------------------------------------------------
void Question3460()
{
	int Array[100];
	int Number;

	memset(Array, 0, sizeof(Array));

	scanf_s("%d", &Number);

	int i = 0;
	while (Number > 0)
	{
		Array[i] = Number % 2;
		if (Array[i] == 1) //나머지가 1이면 i위치를 출력해준다.
		{
			printf("%d ", i);
		}

		Number /= 2;
		i++;
	}
}

int main()
{
	Question3460();
	return 0;
}